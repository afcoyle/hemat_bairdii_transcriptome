# Set path to output folder that will contain all heatmaps and text files
crab_out <- paste0(heatmap_output, "Crab_", crabs[i], "/")
# Select the columns that match our particular crab
crabdat <- TPMcts[, crabIDs[[i]]]
# When we just have two time points, we'll make a special heat map.
# It uses log2 counts, and doesn't scale by row
if (ncol(crabdat) < 3) {
# Construct heat map
print(pheatmap(log2(f.crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(log2(f.crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(log2(f.crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = twoday_clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster. Again, like the graph above, we'll make it log2 scaled and not scale by row
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(log2(clust+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
} else {
# Construct heat map
print(pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(f.crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- f.crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
}
}
# Set height of clusters for samples with 3 time points
clusterht <- 1.8
# Set height of clusters for samples with 2 time points
twoday_clusterht <- 10
# Read in the initial data file
TPMcts <- read.delim(file = paste0(TPM_outpath,
"all_indiv_library_TPMcts.txt"
),
row.names = 1,
check.names = FALSE)
# Remove all genes without at least 1 samples with counts of 30+
TPMcts <- TPMcts %>%
filter_all(any_vars(. > 30))
for (i in 1:length(crabs)) {
# Set path to output folder that will contain all heatmaps and text files
crab_out <- paste0(heatmap_output, "Crab_", crabs[i], "/")
# Select the columns that match our particular crab
crabdat <- TPMcts[, crabIDs[[i]]]
# When we just have two time points, we'll make a special heat map.
# It uses log2 counts, and doesn't scale by row
if (ncol(crabdat) < 3) {
# Construct heat map
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = twoday_clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster. Again, like the graph above, we'll make it log2 scaled and not scale by row
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(log2(clust+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
} else {
# Construct heat map
print(pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
}
}
i <- 1
# Select the columns that match our particular crab
crabdat <- TPMcts[, crabIDs[[i]]]
# Construct heat map
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
# Set path to output folder that will contain all heatmaps and text files
crab_out <- paste0(heatmap_output, "Crab_", crabs[i], "/")
crab_out
# Select the columns that match our particular crab
crabdat <- TPMcts[, crabIDs[[i]]]
# When we just have two time points, we'll make a special heat map.
# It uses log2 counts, and doesn't scale by row
if (ncol(crabdat) < 3) {
# Construct heat map
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = twoday_clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster. Again, like the graph above, we'll make it log2 scaled and not scale by row
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(log2(clust+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
} else {
# Construct heat map
print(pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
}
i <- 1
# Set path to output folder that will contain all heatmaps and text files
crab_out <- paste0(heatmap_output, "Crab_", crabs[i], "/")
# Select the columns that match our particular crab
crabdat <- TPMcts[, crabIDs[[i]]]
# Construct heat map
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = twoday_clusterht)  # split dendrogram based on height specified above
length(unique(lbl))
for (i in 1:length(unique(lbl))) {
clust <- crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster. Again, like the graph above, we'll make it log2 scaled and not scale by row
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(log2(clust+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
(ncol(crabdat)
)
print(pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
View(crabdat)
View(crabdat)
is.na(crabdat) %>% table()
is.infinite(crabdat) %>% table()
class(crabdat)
lapply(crabdat, class)
# Remove all rows without any values
crabtest <- crabdat[rowSums(crabdat[]) > 0, ]
for (i in 1:length(crabs)) {
# Set path to output folder that will contain all heatmaps and text files
crab_out <- paste0(heatmap_output, "Crab_", crabs[i], "/")
# Select the columns that match our particular crab
crabdat <- TPMcts[, crabIDs[[i]]]
# Remove all rows without any values
crabdat <- crabdat[rowSums(crabdat[]) > 0, ]
# When we just have two time points, we'll make a special heat map.
# It uses log2 counts, and doesn't scale by row
if (ncol(crabdat) < 3) {
# Construct heat map
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(log2(crabdat+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = twoday_clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster. Again, like the graph above, we'll make it log2 scaled and not scale by row
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(log2(clust+1), cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "none",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
} else {
# Construct heat map
print(pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
# Plot again to save in our file
png(paste0(crab_out, "heatmap.png"))
print(pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9))
dev.off()
out <- pheatmap(crabdat, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = "gene counts by day",
fontsize = 9)
hc <- out$tree_row
lbl <- cutree(hc, h = clusterht)  # split dendrogram based on height specified above
# Loop through gene clusters, printing heatmap for each
for (i in 1:length(unique(lbl))) {
clust <- crabdat[which(lbl==i) %>% names(), ]
# Write results to table
write.table(clust, file = paste0(crab_out,
"cluster_",
i, ".txt"),
sep = "\t",
row.names = TRUE)
# Create heat map for each cluster
png(paste0(crab_out, "cluster_", i, "_heatmap.png"))
print(pheatmap(clust, cluster_rows = TRUE,
show_rownames = FALSE,
na.rm = TRUE,
cluster_cols = FALSE,
scale = "row",
main = paste0("gene counts by day, cluster ", i),
fontsize = 9))
dev.off()
}
}
}
