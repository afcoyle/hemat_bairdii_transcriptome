for (i in 1:length(file_list)) {
counts <- read.table(file_list[i])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap() %>%
print()
# Get the path for that transcriptome
path <- file_list[i]
# Remove the ending part of the path
path <- str_replace(path, "merged_modules_raw_counts.txt", "")
# Write our counts table
write.csv(counts, file = paste0(path, "merged_modules_counts_table.csv"))
# Open a PNG file and save our percentages heatmap
png(paste0(path, "merged_module_percentages_heatmap.png"))
percentages %>%
makeHeatmap() %>%
print()
dev.off()
}
counts <- read.table(file_list[1])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
testper <- ztable(percentages)
testper %>%
makeHeatmap() %>%
print()
# Get the path for that transcriptome
path <- file_list[i]
# Remove the ending part of the path
path <- str_replace(path, "merged_modules_raw_counts.txt", "")
# Write our counts table
write.csv(counts, file = paste0(path, "merged_modules_counts_table.csv"))
# Write our percentages table
write.csv(percentages, file = paste0(path, "merged_module_percentages_table.csv"))
perc_table <- percentages %>%
makeHeatmap()
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap()
perc_table
perc_table
last_plot()
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
counts <- read.table(file_list[1])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
counts <- read.table(file_list[1])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
heatmap(percentages)
heatmap(as.matrix(percentages))
?heatmap
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap()
percentages %>%
makeHeatmap() %>%
print()
png(paste0(path, "merged_module_percentages_heatmap.png"))
paste0(path, "merged_module_percentages_heatmap.png")
# Get the path for that transcriptome
path <- file_list[i]
# Get the path for that transcriptome
path <- file_list[1]
# Open a PNG file and save our percentages heatmap
png(paste0(path, "merged_module_percentages_heatmap.png"))
percentages %>%
makeHeatmap() %>%
print()
dev.off()
png(paste0(path, "merged_module_percentages_heatmap.png"))
percentages %>%
makeHeatmap() %>%
print()
dev.off()
print(perc_table)
png(paste0(path, "merged_module_percentages_heatmap.png"))
print(perc_table)
dev.off()
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
# In each iteration of the for loop, we'll choose a different transcriptome's raw counts to examine, create two neat summary tables - one with percentages, one with counts - and write as CSVs
for (i in 1:length(file_list)) {
counts <- read.table(file_list[i])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap()
# Get the path for that transcriptome
path <- file_list[i]
# Remove the ending part of the path
path <- str_replace(path, "merged_modules_raw_counts.txt", "")
# Write our counts table
write.csv(counts, file = paste0(path, "merged_modules_counts_table.csv"))
# Save our percentages heatmap
ggsave(filename = paste0(path, "merged_module_percentages_heatmap.png"),
plot = perc_table,)
# Open a PNG file and save our percentages heatmap
windows()
png(file = paste0(path, "merged_module_percentages_heatmap.png"))
print(perc_table)
dev.off()
}
print(perc_table)
png(file = paste0(path, "merged_module_percentages_heatmap.png"))
print(perc_table)
dev.off()
png(file = paste0(path, "merged_module_percentages_heatmap.png"),
width = 30, height = 30)
print(perc_table)
dev.off()
# Open a PNG file and save our percentages heatmap
png(file = paste0(path, "merged_module_percentages_heatmap.png"),
width = 300, height = 300)
print(perc_table)
dev.off()
png(file = paste0(path, "merged_module_percentages_heatmap.png"),
width = 300, height = 300)
print(perc_table)
dev.off()
?png
print(perc_table)
options(ztable.type = Rstudio::viewer)
options(ztable.type = viewer)
options(ztable.type = "html")
testper %>%
makeHeatmap() %>%
print()
counts <- read.table(file_list[1])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
testper <- ztable(percentages)
testper %>%
makeHeatmap() %>%
print()
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
# In each iteration of the for loop, we'll choose a different transcriptome's raw counts to examine, create two neat summary tables - one with percentages, one with counts - and write as CSVs
for (i in 1:length(file_list)) {
counts <- read.table(file_list[i])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap()
# Get the path for that transcriptome
path <- file_list[i]
# Remove the ending part of the path
path <- str_replace(path, "merged_modules_raw_counts.txt", "")
# Write our counts table
write.csv(counts, file = paste0(path, "merged_modules_counts_table.csv"))
# Save our percentages heatmap
ggsave(filename = paste0(path, "merged_module_percentages_heatmap.png"),
plot = perc_table,)
# Open a PNG file and save our percentages heatmap
png(file = paste0(path, "merged_module_percentages_heatmap.png"),
width = 300, height = 300)
print(perc_table)
dev.off()
}
options(ztable.type = "viewer")
print(perc_table)
options(ztable.type = "viewer")
print(perc_table)
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
counts <- read.table(file_list[1])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
counts <- read.table(file_list[1])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap()
e
print(perc_table)
# Get the path for that transcriptome
path <- file_list[1]
# Remove the ending part of the path
path <- str_replace(path, "merged_modules_raw_counts.txt", "")
png(file = paste0(path, "merged_module_percentages_heatmap.png"))
print(perc_table)
dev.off()
jpeg(file = paste0(path, "merged_module_percentages_heatmap.png"))
print(perc_table)
dev.off()
path, "merged_module_percentages_heatmap.png")
paste0(path, "merged_module_percentages_heatmap.png")
print(perc_table)
?makeHeatmap
png(file = paste0(path, "merged_module_percentages_heatmap.png"))
print(makeHeatmap(percentages))
dev.off()
install.packages("htmltools")
install.packages("htmltools")
# Add all required libraries here
list.of.packages <- c("tidyverse", "janitor", "ztable", "htmltools")
# Add all required libraries here
list.of.packages <- c("tidyverse", "janitor", "ztable", "htmltools")
# Get names of all required packages that aren't installed
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
# Install all new packages
if(length(new.packages)) install.packages(new.packages)
# Load all required libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
options(ztable.type = "viewer")
# Add all required libraries here
list.of.packages <- c("tidyverse", "janitor", "ztable", "htmltools")
# Get names of all required packages that aren't installed
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
# Install all new packages
if(length(new.packages)) install.packages(new.packages)
# Load all required libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
options(ztable.type = "viewer")
options(ztable.type = "html")
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
# In each iteration of the for loop, we'll choose a different transcriptome's raw counts to examine, create two neat summary tables - one with percentages, one with counts - and write as CSVs
for (i in 1:length(file_list)) {
counts <- read.table(file_list[i])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap()
# Get the path for that transcriptome
path <- file_list[i]
# Remove the ending part of the path
path <- str_replace(path, "merged_modules_raw_counts.txt", "")
# Write our counts table
write.csv(counts, file = paste0(path, "merged_modules_counts_table.csv"))
# Save our percentages heatmap
ggsave(filename = paste0(path, "merged_module_percentages_heatmap.png"),
plot = perc_table,)
# Open a PNG file and save our percentages heatmap
png(file = paste0(path, "merged_module_percentages_heatmap.png"))
print(makeHeatmap(percentages))
dev.off()
}
# Add all required libraries here
list.of.packages <- c("tidyverse", "janitor", "ztable", "htmltools")
# Get names of all required packages that aren't installed
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
# Install all new packages
if(length(new.packages)) install.packages(new.packages)
# Load all required libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
options(ztable.type = "viewer")
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
counts <- read.table(file_list[1])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
percentages <- ztable(percentages)
perc_table <- percentages %>%
makeHeatmap()
perc_table
plot(perc_table)
ggsave
?ggsave
# Save our percentages heatmap
ggsave(filename = paste0(path, "merged_module_percentages_heatmap.png"),
plot = perc_table, device = "png")
# Save our percentages heatmap
ggsave(filename = paste0(path, "merged_module_percentages_heatmap.png"),
plot = perc_table, device = "png")
last_plot()
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist)
# Add all required libraries here
list.of.packages <- c("tidyverse", "janitor", "ztable", "htmltools")
# Get names of all required packages that aren't installed
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])]
# Install all new packages
if(length(new.packages)) install.packages(new.packages)
# Load all required libraries
lapply(list.of.packages, FUN = function(X) {
do.call("require", list(X))
})
# Get the path of all relevant files
file_list <- Sys.glob("../output/manual_clustering/*/merged_modules_raw_counts.txt")
# In each iteration of the for loop, we'll choose a different transcriptome's raw counts to examine, create two neat summary tables - one with percentages, one with counts - and write as CSVs
for (i in 1:length(file_list)) {
counts <- read.table(file_list[i])
# Remove the last line - we can figure out the total on our own
counts <- head(counts, -1)
# Split the path column by slashes
counts <- separate(counts, 2, into = c("A", "B", "C", "D", "E", "F", "G"), sep = "/")
# Remove columns without multiple values. Should leave us with columns for counts, crab, and module type
counts <- counts[vapply(counts, function(x) length(unique(x)) > 1, logical(1L))]
# Rename existing columns
colnames(counts) <- c("Genes", "Crab", "Module")
# Remove the _merged.txt part of each Module column
counts$Module <- str_replace(counts$Module, "_merged.txt", "")
# Pivot wider so that each module type is its own column
counts <- counts %>%
pivot_wider(names_from = Module, values_from = Genes)
# Create another table with percentage of module membership for each crab (each crab should sum to 100%)
percentages <- adorn_percentages(counts, denominator = "row", na.rm = TRUE)
# Move crab column to rowname for both tables
counts <- column_to_rownames(counts, var = "Crab")
percentages <- column_to_rownames(percentages, var = "Crab")
percentages <- round(percentages, digits = 3)
percs <- ztable(percentages)
perc_table <- percs %>%
makeHeatmap()
print(perc_table)
# Get the path for that transcriptome
path <- file_list[i]
# Remove the ending part of the path
path <- str_replace(path, "merged_modules_raw_counts.txt", "")
# Write our counts table
write.csv(counts, file = paste0(path, "merged_modules_counts_table.csv"))
# Save our percentages heatmap
ggsave(filename = paste0(path, "merged_module_percentages_heatmap.png"),
plot = perc_table, device = "png")
# Open a PNG file and save our percentages heatmap
png(file = paste0(path, "merged_module_percentages_heatmap.png"))
print(makeHeatmap(percentages))
dev.off()
plot(cars$speed, cars$dist)
}
plot(cars$speed, cars$dist)
print(plot(cars$speed, cars$dist))
plot(cars)
